Document: 3. HTML Templating

The HTML templating class uses the BlazeGears Templating Language, which is based on a mix of JavaScript and <BottlePy's Simple Template at http://bottlepy.org/docs/dev/stpl.html>. Parsing a BGTL template will return an object, which can be rendered with some provided data.

There are three different control tags available: statements, escaped output, and unescaped output. Each of these has an opening and a closing tag, but the closing tags can be replaced by line breaks.

The example below uses both the opening and closing tags for all three control tags.

(code)
	bgtl = new BlazeGears.BGTL();
	
	template = "%for (var i in entries) {%"; // statement
	template += "<h1>{{entries[i].title}}</h1>"; // escaped output
	template += "<p>{{!entries[i].content}}</p>"; // unescaped output
	template += "%}%";
	
	entries = [
		{title: "Entry #1", content: "This is some plain text content."},
		{title: "Entry #2", content: "This is some content with a <a href='http://www.blazegears.com'>link</a>."}
	];
	
	parsed_template = bgtl.compileTemplate(template);
	alert(parsed_template.render(entries));
(end)

Templates can be parsed and rendered in a single command, too, but this is only useful for templates that are going to be rendered only once.

See Also:
	<BlazeGears.BGTL>
